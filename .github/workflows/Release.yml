name: Release

on:
  push:
    branches:
      - master
    paths:
      - "src/version.json"
      - ".github/workflows/Release.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip oss]') || !contains(github.event.head_commit.message, '[Merge branch]')"

    steps:
      - uses: actions/checkout@v2
      - name: Read tag_main
        id: tag_main
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./.github/version.json
          property: version

      - name: Read tag_latest
        id: tag_latest
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./.github/version.json
          property: version
          
      - name: Read Date
        id: date
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./.github/version.json
          property: date

      - name: Read description
        id: description
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.github/version.info

      - name: ZIP files
        run: |
          zip -q -r ERSS_Mingyan_v${{steps.tag_latest.outputs.value}}_release.zip *
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{steps.tag_latest.outputs.value}}
          release_name: ERSS Mingyan v${{steps.tag_latest.outputs.value}}
          body: |
            ${{steps.date.outputs.value}}
            ${{steps.description.outputs.content}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ERSS_Mingyan_v${{steps.tag_latest.outputs.value}}_release.zip
          asset_name: ERSS_Mingyan_v${{steps.tag_latest.outputs.value}}_release.zip
          asset_content_type: application/zip